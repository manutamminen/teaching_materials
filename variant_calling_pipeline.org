# -*- org-export-babel-evaluate: nil -*-

#+PROPERTY: header-args :eval never-export

* Variant calling pipeline example

** Pipeline in a nutshell

1) Burrows-Wheeler alignment of re-sequenced Fastq files to a reference genome

2) SAM to BAM file conversion

3) BAM to VCF (variant calline file) conversion

4) Integration of VCF with GFF3 annotation file

We'll use [[https://jamanetwork.com/journals/jamaophthalmology/fullarticle/2552682][this article]] as the background story.

** On a Unix cluster

Schedule an interactive session on a processing core.

#+BEGIN_SRC sh
sinteractive --account project_2002149 --mem 64000 --tmp 100
cd /scratch/project_2002149
#+END_SRC

Make the analysis directory

#+BEGIN_SRC sh
mkdir YOUR_NAME
cd YOUR_NAME
#+END_SRC


Download the E. coli EC958 reference sequence and annotation.

#+BEGIN_SRC sh
wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/285/655/GCF_000285655.3_EC958.v1/GCF_000285655.3_EC958.v1_genomic.fna.gz
wget ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/285/655/GCF_000285655.3_EC958.v1/GCF_000285655.3_EC958.v1_genomic.gff.gz
#+END_SRC


Download the E. coli MEEI01 re-sequencing data.

#+BEGIN_SRC sh
wget https://zenodo.org/api/files/de95e987-009b-44d6-94e5-66408759a59e/NZ_LNAE01000014_R1.fq.gz
wget https://zenodo.org/api/files/de95e987-009b-44d6-94e5-66408759a59e/NZ_LNAE01000014_R2.fq.gz
#+END_SRC


Unzip and rename the sequence files.

#+BEGIN_SRC sh
gunzip *.gz
mv GCF_000285655.3_EC958.v1_genomic.fna EC958.fna
mv GCF_000285655.3_EC958.v1_genomic.gff EC958.gff
#+END_SRC



Enable several bioinformatics tools on the Unix cluster, including Burrows-Wheeler aligner (bwa),
samtools and bcftools.

#+BEGIN_SRC sh
module load biokit
#+END_SRC


Prepare and indexed database of the EC958 reference genome.

#+BEGIN_SRC sh
bwa index EC958.fna
#+END_SRC


Align the resequencing reads on the reference genome. A SAM file is produced.

#+BEGIN_SRC sh
bwa mem -t 8 EC958.fna NZ_LNAE01000014_R1.fq NZ_LNAE01000014_R2.fq > MEEI01.sam
#+END_SRC


Sort the SAM file and prepare a BAM file

#+BEGIN_SRC sh
samtools sort --threads 8 -l 4 -O bam -o MEEI01.bam MEEI01.sam
#+END_SRC


Prepare a VCF file from the BAM file

#+BEGIN_SRC sh
bcftools mpileup -Ou -f EC958.fna MEEI01.bam | bcftools call --ploidy 1 -vcO z -o MEEI01.vcf.gz
#+END_SRC


Filter the VCF file for high-quality variant calls

#+BEGIN_SRC sh
bcftools filter -i'QUAL>10' MEEI01.vcf.gz | bcftools filter -i'DP>50' | bcftools filter -i'IMF > 0.8' -o MEEI01.filtered.vcf
#+END_SRC


Combine the filtered VCF file with the annotation in the gff file using a tiny VCF parser written by [[https://github.com/slhogle/UTU_microbial_genomics/blob/master/PART_II.md][Shane Hogle]].

First download the parser

#+BEGIN_SRC sh
wget https://raw.githubusercontent.com/manutamminen/teaching_materials/master/tinyVCF_parser.py
#+END_SRC


And then combine the annotation to the VCF.

#+BEGIN_SRC sh
python tinyVCF_parser.py EC958.gff MEEI01.filtered.vcf MEEI01.filtered.annotated.vcf
#+END_SRC



